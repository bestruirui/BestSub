name: Releaser

on:
  push:
    tags:
      - '*'
      
permissions:
  contents: write
  packages: write

jobs:
  releaser:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            arch: amd64_v1
          - platform: linux/arm64
            arch: arm64_v8.0
          - platform: linux/arm/v7
            arch: arm_7
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Tag
        run: git fetch --force --tags
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: Release
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
          tags: |
            type=ref,event=tag
            type=raw,value=alpine,suffix=-alpine
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push (Debian)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TARGET_ARCH=${{ matrix.arch }}

      - name: Build and push (Alpine)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.alpine
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}-alpine
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TARGET_ARCH=${{ matrix.arch }}
